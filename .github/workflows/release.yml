# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    branches:
      - "master"
    paths:
      - 'rockspec/**'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Lua
        uses: leafo/gh-actions-lua@v8

      - name: Install Luarocks
        uses: leafo/gh-actions-luarocks@v4
        with:
          luarocksVersion: "3.8.0"

      - name: Extract release name
        id: release_env
        shell: bash
        run: |
          title="${{ github.event.head_commit.message }}"
          re="^feat: release v*(\S+)"
          if [[ $title =~ $re ]]; then
              v=v${BASH_REMATCH[1]}
              echo "##[set-output name=version;]${v}"
              echo "##[set-output name=version_withou_v;]${BASH_REMATCH[1]}"
          else
              echo "commit format is not correct"
              exit 1
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_env.outputs.version }}
          release_name: ${{ steps.release_env.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload to luarocks
        env:
          LUAROCKS_TOKEN: ${{ secrets.LUAROCKS_TOKEN }}
        run: |
          luarocks install dkjson
          luarocks upload rockspec/skywalking-nginx-lua-${{ steps.release_env.outputs.version_withou_v }}-0.rockspec --api-key=${LUAROCKS_TOKEN}
